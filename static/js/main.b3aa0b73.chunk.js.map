{"version":3,"sources":["Passage.js","CrossReference.js","Audio.js","Pictures.js","App.js","serviceWorker.js","index.js"],"names":["Verse","styled","props","cursor","fontSize","Pericope","fontWeight","textAlign","Passage","passage","data","book","verses","Card","CardHeader","title","CardContent","reduce","acc","verse","index","arr","content","number","accArr","prevVerse","prevContent","slice","key","CrossReference","Grid","container","spacing","filter","references","map","item","Typography","variant","Audio","audioUrl","controls","src","DivWithBackground","height","paddingTop","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","DistancedCard","marginTop","margin","Pictures","images","image","useStyles","makeStyles","iconRoot","ImageInput","display","Container","isTabbed","marginBottom","padding","CameraBackground","width","backgroundColor","position","zIndex","alignItems","justifyContent","Preview","maxWidth","maxHeight","BottomNavigationPositioned","BottomNavigation","bottom","BigButtonWrapper","Paper","flexDirection","VerticalWrapper","App","classes","React","useState","isCameraOpen","setIsCameraOpen","isPreview","setIsPreview","view","setView","resultView","setResultView","setImage","setData","handleSubmit","paramImage","imageToPost","fetch","method","headers","body","JSON","stringify","then","res","json","CssBaseline","Slide","direction","in","mountOnEnter","unmountOnExit","isImageMirror","idealFacingMode","FACING_MODES","ENVIRONMENT","onTakePhotoAnimationDone","dataUri","AppBar","Toolbar","Tabs","value","onChange","e","newResultView","scrollButtons","Tab","label","justify","Button","color","onClick","IconButton","PhotoCamera","root","component","Publish","type","files","target","fileReader","FileReader","onload","base64Representation","result","readAsDataURL","varian","newView","showLabels","BottomNavigationAction","icon","Home","Equalizer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b3aa0b73.chunk.js","sourcesContent":["import React from 'react';\n\nimport { styled, Card, CardContent, CardHeader } from '@material-ui/core';\n\nconst Verse = styled(({ ...props }) => <div {...props} />)({\n  cursor: 'pointer',\n  fontSize: '1rem',\n});\n\nconst Pericope = styled('div')({\n  fontWeight: 'bold',\n  textAlign: 'center',\n  fontSize: '1rem',\n});\n\nexport const Passage = ({ data }) => {\n  const { passage } = data;\n  const { book, verses } = passage;\n\n  return (\n    <Card>\n      <CardHeader title={book} />\n      <CardContent>\n        {\n          verses.reduce(\n            (acc, verse, index, arr) => {\n              const { content, number } = verse;\n              const { accArr, prevVerse } = acc;\n\n              if (number === prevVerse) {\n                const prevVerseObj = arr[index - 1];\n                const { content: prevContent } = prevVerseObj;\n\n                return {\n                  accArr: [\n                    ...accArr.slice(0, index - 1),\n                    <Pericope key={prevContent}>{prevContent}</Pericope>,\n                    <Verse key={content}>\n                      <sup>{number}</sup> {content}\n                    </Verse>,\n                  ],\n                  prevVerse: number,\n                };\n              }\n\n              return {\n                accArr: [\n                  ...accArr,\n                  <Verse key={content}>\n                    <sup>{number}</sup>\n                    <span>{content}</span>\n                  </Verse>,\n                ],\n                prevVerse: number,\n              };\n            },\n            { accArr: [], prevVerse: -1 }\n          ).accArr\n        }\n      </CardContent>\n    </Card>\n  );\n};\n","import React from 'react';\n\nimport { Card, CardContent, Grid, Typography } from '@material-ui/core';\n\nexport const CrossReference = ({ data }) => {\n  const { passage } = data;\n  const { book, verses } = passage;\n\n  return (\n    <Grid container spacing={2}>\n      {verses\n        .filter(verse => verse.references !== null)\n        .map(verse => {\n          const { content, number, references } = verse;\n\n          return (\n            <Grid item>\n              <Card>\n                <CardContent>\n                  <Typography>\n                    {number}. {content}\n                  </Typography>\n                  <Typography variant=\"caption\">{references}</Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n          );\n        })}\n    </Grid>\n  );\n};\n","import React from 'react';\n\nimport { Card, CardContent, CardHeader } from '@material-ui/core';\n\nexport const Audio = ({ data }) => {\n  const { audioUrl } = data;\n\n  return (\n    <Card>\n      <CardHeader title=\"Audio\" />\n      <CardContent>\n        <audio controls>\n          <source src={audioUrl} />\n        </audio>\n      </CardContent>\n    </Card>\n  );\n};\n","import React from 'react';\n\nimport { styled, Card, Grid } from '@material-ui/core';\n\nconst DivWithBackground = styled(({ src, ...props }) => <div {...props} />)({\n  height: 0,\n  paddingTop: '56.25%',\n  backgroundImage: ({ src }) => `url(${src})`,\n  backgroundPosition: 'center',\n  backgroundSize: 'cover',\n  backgroundRepeat: 'no-repeat',\n});\n\nconst DistancedCard = styled(Card)({\n  marginTop: '12px',\n  '&:first-child': {\n    margin: 0,\n  },\n});\n\nexport const Pictures = ({ data }) => {\n  const { images } = data;\n\n  return images.map(image => (\n    <DistancedCard>\n      <DivWithBackground src={image} />\n    </DistancedCard>\n  ));\n};\n","import React from 'react';\nimport Camera, { FACING_MODES } from 'react-html5-camera-photo';\nimport 'react-html5-camera-photo/build/css/index.css';\n\nimport {\n  CssBaseline,\n  styled,\n  makeStyles,\n  AppBar,\n  IconButton,\n  Toolbar,\n  Grid,\n  Typography,\n  Button,\n  Slide,\n  BottomNavigation,\n  BottomNavigationAction,\n  Tabs,\n  Tab,\n  Paper,\n} from '@material-ui/core';\nimport {\n  Home as HomeIcon,\n  Equalizer as EqualizerIcon,\n  PhotoCamera as PhotoCameraIcon,\n  Publish as PublishIcon,\n} from '@material-ui/icons';\n\nimport { Passage } from './Passage';\nimport { CrossReference } from './CrossReference';\nimport { Audio } from './Audio';\nimport { Pictures } from './Pictures';\n\nconst useStyles = makeStyles({\n  iconRoot: {\n    fontSize: 'calc((100vh - 56px - 56px) / 4)',\n  },\n});\n\nconst ImageInput = styled('input')({\n  display: 'none',\n});\n\nconst Container = styled(({ isTabbed, ...props }) => <div {...props} />)({\n  // minHeight: ({ isTabbed }) =>\n  //   isTabbed ? 'calc(100vh - 56px - 56px - 48px)' : 'calc(100vh - 56px - 56px)',\n  marginBottom: '56px',\n  padding: '16px',\n});\n\nconst CameraBackground = styled('div')({\n  height: '100vh',\n  width: '100vw',\n  backgroundColor: 'black',\n  position: 'absolute',\n  zIndex: 999,\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n});\n\nconst Preview = styled('img')({\n  maxWidth: '100%',\n  maxHeight: '100%',\n});\n\nconst BottomNavigationPositioned = styled(BottomNavigation)({\n  position: 'fixed',\n  bottom: 0,\n  width: '100vw',\n});\n\nconst BigButtonWrapper = styled(Paper)({\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n});\n\nconst VerticalWrapper = styled('div')({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  height: 'calc(100vh - 56px - 56px - 32px)',\n});\n\nexport const App = () => {\n  const classes = useStyles();\n\n  const [isCameraOpen, setIsCameraOpen] = React.useState(false);\n  const [isPreview, setIsPreview] = React.useState(false);\n\n  const [view, setView] = React.useState('home');\n  const [resultView, setResultView] = React.useState('passage');\n  const [image, setImage] = React.useState();\n  const [data, setData] = React.useState();\n\n  const handleChangeView = (e, newView) => {\n    setView(newView);\n  };\n\n  const handleSubmit = paramImage => {\n    const imageToPost = paramImage || image;\n    const link =\n      'https://magic-bible-api.herokuapp.com/api/v1/image-to-passage';\n\n    fetch(link, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ image: imageToPost }),\n    })\n      .then(res => res.json())\n      .then(data => {\n        setData(data);\n        setView('result');\n        setIsPreview(false);\n      });\n  };\n\n  const handleSend = () => {\n    handleSubmit(image);\n  };\n\n  const handleRetake = () => {\n    setIsPreview(false);\n    setIsCameraOpen(true);\n  };\n\n  const handleUploadImage = e => {\n    const { files } = e.target;\n\n    const fileReader = new FileReader();\n    fileReader.onload = e => {\n      const base64Representation = e.target.result;\n      setImage(base64Representation);\n\n      handleSubmit(base64Representation);\n    };\n\n    fileReader.readAsDataURL(files[0]);\n  };\n\n  const handleTakePhoto = dataUri => {\n    setImage(dataUri);\n    setIsPreview(true);\n    setIsCameraOpen(false);\n  };\n\n  const handleOpenCamera = () => {\n    setIsCameraOpen(true);\n  };\n\n  const handleChangeResultView = (e, newResultView) => {\n    setResultView(newResultView);\n  };\n\n  return (\n    <>\n      <CssBaseline />\n\n      <Slide direction=\"left\" in={isCameraOpen} mountOnEnter unmountOnExit>\n        <CameraBackground>\n          <Camera\n            isImageMirror={false}\n            idealFacingMode={FACING_MODES.ENVIRONMENT}\n            onTakePhotoAnimationDone={handleTakePhoto}\n          />\n        </CameraBackground>\n      </Slide>\n\n      <AppBar position=\"static\">\n        <Toolbar>\n          {/* <IconButton edge=\"start\" color=\"inherit\" onClick={handleOpenDrawer}>\n            <MenuIcon />\n          </IconButton> */}\n          <Typography variant=\"h6\">Magic Bible</Typography>\n        </Toolbar>\n        {view === 'result' && (\n          <Tabs\n            value={resultView}\n            onChange={handleChangeResultView}\n            variant=\"scrollable\"\n            scrollButtons=\"on\"\n          >\n            <Tab label=\"Passage\" value=\"passage\" />\n            <Tab label=\"Cross References\" value=\"crossReferences\" />\n            <Tab label=\"Audio\" value=\"audio\" />\n            <Tab label=\"Pictures\" value=\"picture\" />\n          </Tabs>\n        )}\n      </AppBar>\n\n      <Container isTabbed={view === 'result'}>\n        {view === 'home' ? (\n          <VerticalWrapper>\n            <Grid\n              container\n              direction=\"column\"\n              justify=\"center\"\n              alignItems=\"center\"\n              spacing={3}\n            >\n              {isPreview ? (\n                <>\n                  <Grid item>\n                    <Preview src={image} />\n                  </Grid>\n                  <Grid item>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={handleSend}\n                    >\n                      Send\n                    </Button>\n                    <Grid item>\n                      <Button color=\"secondary\" onClick={handleRetake}>\n                        Retake\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </>\n              ) : (\n                <>\n                  <Grid item>\n                    <BigButtonWrapper>\n                      <IconButton\n                        color=\"primary\"\n                        variant=\"contained\"\n                        onClick={handleOpenCamera}\n                      >\n                        <PhotoCameraIcon classes={{ root: classes.iconRoot }} />\n                      </IconButton>\n                      <Typography variant=\"button\">Take Photo</Typography>\n                    </BigButtonWrapper>\n                  </Grid>\n                  <Grid item>\n                    <BigButtonWrapper>\n                      <IconButton\n                        color=\"primary\"\n                        variant=\"contained\"\n                        component=\"label\"\n                      >\n                        <PublishIcon classes={{ root: classes.iconRoot }} />\n                        <ImageInput type=\"file\" onChange={handleUploadImage} />\n                      </IconButton>\n                      <Typography variant=\"button\">Upload Photo</Typography>\n                    </BigButtonWrapper>\n                  </Grid>\n                </>\n              )}\n            </Grid>\n          </VerticalWrapper>\n        ) : view === 'result' ? (\n          data ? (\n            resultView === 'passage' ? (\n              <Passage data={data} />\n            ) : resultView === 'crossReferences' ? (\n              <CrossReference data={data} />\n            ) : resultView === 'audio' ? (\n              <Audio data={data} />\n            ) : resultView === 'picture' ? (\n              <Pictures data={data} />\n            ) : (\n              <></>\n            )\n          ) : (\n            <Typography varian=\"h4\">Please upload a photo first</Typography>\n          )\n        ) : (\n          <></>\n        )}\n      </Container>\n\n      <BottomNavigationPositioned\n        value={view}\n        onChange={handleChangeView}\n        showLabels\n      >\n        <BottomNavigationAction label=\"Home\" value=\"home\" icon={<HomeIcon />} />\n        <BottomNavigationAction\n          label=\"Result\"\n          value=\"result\"\n          icon={<EqualizerIcon />}\n        />\n      </BottomNavigationPositioned>\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}