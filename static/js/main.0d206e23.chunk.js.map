{"version":3,"sources":["Passage.js","CrossReference.js","App.js","serviceWorker.js","index.js"],"names":["DivWithPointer","styled","props","cursor","Passage","passage","data","book","verses","Card","CardHeader","title","CardContent","map","verse","content","number","key","CrossReference","crossReferences","crossReference","useStyles","makeStyles","iconRoot","fontSize","ImageInput","display","Container","height","marginBottom","padding","CameraBackground","width","backgroundColor","position","zIndex","alignItems","justifyContent","Preview","maxWidth","maxHeight","BottomNavigationPositioned","BottomNavigation","bottom","BigButtonWrapper","Paper","flexDirection","App","classes","React","useState","isDrawerOpen","setIsDrawerOpen","isCameraOpen","setIsCameraOpen","isPreview","setIsPreview","view","setView","resultView","setResultView","image","setImage","setData","handleSubmit","paramImage","imageToPost","fetch","method","headers","body","JSON","stringify","then","res","json","CssBaseline","Drawer","anchor","open","onClose","List","ListItem","button","onClick","ListItemIcon","PhotoCamera","ListItemText","primary","Equalizer","Slide","direction","in","mountOnEnter","unmountOnExit","isImageMirror","idealFacingMode","FACING_MODES","ENVIRONMENT","onTakePhotoAnimationDone","dataUri","AppBar","Toolbar","Typography","variant","Tabs","value","onChange","e","newResultView","scrollButtons","Tab","label","Grid","container","spacing","item","src","Button","IconButton","color","root","component","Publish","type","files","target","fileReader","FileReader","onload","base64Representation","result","readAsDataURL","xs","md","varian","newView","showLabels","BottomNavigationAction","icon","Home","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0d206e23.chunk.js","sourcesContent":["import React from 'react';\n\nimport { styled, Card, CardContent, CardHeader } from '@material-ui/core';\n\nconst DivWithPointer = styled(({ ...props }) => <div {...props} />)({\n  cursor: 'pointer',\n});\n\nexport const Passage = ({ data }) => {\n  const { passage } = data;\n  const { book, verses } = passage;\n\n  return (\n    <Card>\n      <CardHeader title={book} />\n      <CardContent>\n        {verses.map(verse => {\n          const { content, number } = verse;\n\n          return (\n            <DivWithPointer key={content}>\n              <sup>{number}</sup>\n              <span>{content}</span>\n            </DivWithPointer>\n          );\n        })}\n      </CardContent>\n    </Card>\n  );\n};\n","import React from 'react';\n\nimport { Card, CardContent, CardHeader } from '@material-ui/core';\n\nexport const CrossReference = ({ data }) => {\n  const { crossReferences } = data;\n\n  return (\n    <Card>\n      <CardHeader title=\"Cross-references\" />\n      <CardContent>\n        {crossReferences.map(crossReference => (\n          <div key={crossReference}>{crossReference}</div>\n        ))}\n      </CardContent>\n    </Card>\n  );\n};\n","import React from 'react';\nimport Camera, { FACING_MODES } from 'react-html5-camera-photo';\nimport 'react-html5-camera-photo/build/css/index.css';\n\nimport {\n  CssBaseline,\n  styled,\n  makeStyles,\n  AppBar,\n  Drawer,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Toolbar,\n  Grid,\n  Typography,\n  Button,\n  Slide,\n  BottomNavigation,\n  BottomNavigationAction,\n  Tabs,\n  Tab,\n  Paper,\n} from '@material-ui/core';\nimport {\n  Home as HomeIcon,\n  MoreVert as MoreIcon,\n  Equalizer as EqualizerIcon,\n  PhotoCamera as PhotoCameraIcon,\n  Publish as PublishIcon,\n  ArrowBack as ArrowBackIcon,\n} from '@material-ui/icons';\n\nimport { Passage } from './Passage';\nimport { CrossReference } from './CrossReference';\n\nconst useStyles = makeStyles({\n  iconRoot: {\n    fontSize: 'calc((100vh - 56px - 56px) / 4)',\n  },\n});\n\nconst ImageInput = styled('input')({\n  display: 'none',\n});\n\nconst Container = styled('div')({\n  height: 'calc(100vh - 56px - 56px)',\n  marginBottom: '56px',\n  padding: '16px',\n});\n\nconst CameraBackground = styled('div')({\n  height: '100vh',\n  width: '100vw',\n  backgroundColor: 'black',\n  position: 'absolute',\n  zIndex: 999,\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n});\n\nconst Preview = styled('img')({\n  maxWidth: '100%',\n  maxHeight: '100%',\n});\n\nconst BottomNavigationPositioned = styled(BottomNavigation)({\n  position: 'fixed',\n  bottom: 0,\n  width: '100vw',\n});\n\nconst BigButtonWrapper = styled(Paper)({\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n});\n\nexport const App = () => {\n  const classes = useStyles();\n\n  const [isDrawerOpen, setIsDrawerOpen] = React.useState(false);\n  const [isCameraOpen, setIsCameraOpen] = React.useState(false);\n  const [isPreview, setIsPreview] = React.useState(false);\n\n  const [view, setView] = React.useState('home');\n  const [resultView, setResultView] = React.useState('passage');\n  const [image, setImage] = React.useState();\n  const [data, setData] = React.useState();\n\n  const handleOpenDrawer = () => {\n    setIsDrawerOpen(true);\n  };\n\n  const handleCloseDrawer = () => {\n    setIsDrawerOpen(false);\n  };\n\n  const handleOpenHome = () => {\n    setView('home');\n    setIsDrawerOpen(false);\n  };\n  const handleOpenResult = () => {\n    setView('result');\n    setIsDrawerOpen(false);\n  };\n\n  const handleChangeView = (e, newView) => {\n    setView(newView);\n  };\n\n  const handleSubmit = paramImage => {\n    const imageToPost = paramImage || image;\n    const link =\n      process.env.NODE_ENV === 'development'\n        ? 'http://127.0.0.1:5000/api/v1/image-to-passage'\n        : 'https://magic-bible-api.herokuapp.com/api/v1/image-to-passage';\n\n    fetch(link, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ image: imageToPost }),\n    })\n      .then(res => res.json())\n      .then(data => {\n        setData(data);\n        setView('result');\n        setIsPreview(false);\n      });\n  };\n\n  const handleSend = () => {\n    handleSubmit(image);\n  };\n\n  const handleUploadImage = e => {\n    const { files } = e.target;\n\n    const fileReader = new FileReader();\n    fileReader.onload = e => {\n      const base64Representation = e.target.result;\n      setImage(base64Representation);\n\n      handleSubmit(base64Representation);\n    };\n\n    fileReader.readAsDataURL(files[0]);\n  };\n\n  const handleTakePhoto = dataUri => {\n    setImage(dataUri);\n    setIsPreview(true);\n    setIsCameraOpen(false);\n  };\n\n  const handleOpenCamera = () => {\n    setIsCameraOpen(true);\n  };\n\n  const handleChangeResultView = (e, newResultView) => {\n    setResultView(newResultView);\n  };\n\n  return (\n    <>\n      <CssBaseline />\n\n      <Drawer anchor=\"left\" open={isDrawerOpen} onClose={handleCloseDrawer}>\n        <List>\n          <ListItem button onClick={handleOpenHome}>\n            <ListItemIcon>\n              <PhotoCameraIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Camera\" />\n          </ListItem>\n          <ListItem button onClick={handleOpenResult}>\n            <ListItemIcon>\n              <EqualizerIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Result\" />\n          </ListItem>\n        </List>\n      </Drawer>\n\n      <Slide direction=\"left\" in={isCameraOpen} mountOnEnter unmountOnExit>\n        <CameraBackground>\n          <Camera\n            isImageMirror={false}\n            idealFacingMode={FACING_MODES.ENVIRONMENT}\n            onTakePhotoAnimationDone={handleTakePhoto}\n          />\n        </CameraBackground>\n      </Slide>\n\n      <AppBar position=\"static\">\n        <Toolbar>\n          {/* <IconButton edge=\"start\" color=\"inherit\" onClick={handleOpenDrawer}>\n            <MenuIcon />\n          </IconButton> */}\n          <Typography variant=\"h6\">Magic Bible</Typography>\n        </Toolbar>\n        {view === 'result' && data && (\n          <Tabs\n            value={resultView}\n            onChange={handleChangeResultView}\n            variant=\"scrollable\"\n            scrollButtons=\"on\"\n          >\n            <Tab label=\"Passage\" value=\"passage\" />\n            <Tab label=\"Cross References\" value=\"crossReferences\" />\n            <Tab label=\"Audio\" value=\"audio\" />\n            <Tab label=\"Pictures\" value=\"picture\" />\n          </Tabs>\n        )}\n      </AppBar>\n\n      <Container>\n        {view === 'home' ? (\n          <Grid container direction=\"column\" alignItems=\"center\" spacing={3}>\n            {isPreview ? (\n              <>\n                <Grid item>\n                  <Preview src={image} />\n                </Grid>\n                <Grid item>\n                  <Button variant=\"contained\" onClick={handleSend}>\n                    Send\n                  </Button>\n                </Grid>\n              </>\n            ) : (\n              <>\n                <Grid item>\n                  <BigButtonWrapper>\n                    <IconButton\n                      color=\"primary\"\n                      variant=\"contained\"\n                      onClick={handleOpenCamera}\n                    >\n                      <PhotoCameraIcon classes={{ root: classes.iconRoot }} />\n                    </IconButton>\n                    <Typography variant=\"button\">Take Photo</Typography>\n                  </BigButtonWrapper>\n                </Grid>\n                <Grid item>\n                  <BigButtonWrapper>\n                    <IconButton\n                      color=\"primary\"\n                      variant=\"contained\"\n                      component=\"label\"\n                    >\n                      <PublishIcon classes={{ root: classes.iconRoot }} />\n                      <ImageInput type=\"file\" onChange={handleUploadImage} />\n                    </IconButton>\n                    <Typography variant=\"button\">Upload Photo</Typography>\n                  </BigButtonWrapper>\n                </Grid>\n              </>\n            )}\n          </Grid>\n        ) : view === 'result' ? (\n          data ? (\n            <Grid container spacing={2}>\n              {resultView === 'passage' ? (\n                <Grid item xs={12} md={6}>\n                  <Passage data={data} />\n                </Grid>\n              ) : resultView === 'crossReferences' ? (\n                <Grid item xs={12} md={6}>\n                  <CrossReference data={data} />\n                </Grid>\n              ) : (\n                <></>\n              )}\n            </Grid>\n          ) : (\n            <Typography varian=\"h4\">Please upload a photo first</Typography>\n          )\n        ) : (\n          <></>\n        )}\n      </Container>\n\n      <BottomNavigationPositioned\n        value={view}\n        onChange={handleChangeView}\n        showLabels\n      >\n        <BottomNavigationAction label=\"Home\" value=\"home\" icon={<HomeIcon />} />\n        <BottomNavigationAction\n          label=\"Result\"\n          value=\"result\"\n          icon={<EqualizerIcon />}\n        />\n      </BottomNavigationPositioned>\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}